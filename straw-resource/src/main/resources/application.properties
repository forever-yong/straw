# 服务器端的端口号
server.port=8888

# 应用程序名称
spring.application.name=resource

# Eureka Client的注册位置，即：Eureka Server的位置
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Eureka实例名称，即Eureka Client名称
eureka.instance.appname=${spring.application.name}
# Eureka Client是否使用IP地址来注册
# ## 即最终的注册表中表示这个Eureka Client时使用的是127.0.0.1这样的IP地址，还是localhost这样的主机名
# ## 取值为true表示使用IP地址，取值为false表示不使用IP地址，即使用主机名
eureka.instance.prefer-ip-address=true
# Eureka Client注册的IP地址，需要eureka.instance.prefer-ip-address设置为true
eureka.instance.ip-address=127.0.0.1
# Eureka Client注册的主机名，需要eureka.instance.prefer-ip-address设置为false
eureka.instance.hostname=localhost
# Eureka Client在Eureka Server的状态页显示的信息
eureka.instance.instance-id=${eureka.instance.appname}@${eureka.instance.ip-address}:${server.port}

# 响应的JSON结果中将不包含为null的属性
spring.jackson.default-property-inclusion=non_null

# 设置显示的日志级别
logging.level.cn.tedu.straw=trace

# 静态资源文件夹
spring.resources.static-locations=classpath:/static/, file:D:/straw-upload/

# 自定义配置：上传文件--发布问题--图片文件夹
project.fileupload.question-image.base-dir=D:/straw-upload/
# 自定义配置：上传文件--发布问题--文件大小的上限
project.fileupload.question-image.max-size=204800
# 自定义配置：上传文件--发布问题--文件类型
project.fileupload.question-image.content-types=image/jpeg, image/png

