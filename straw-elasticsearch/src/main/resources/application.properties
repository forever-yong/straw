# 服务器端的端口号
server.port=8200

# 应用程序名称
spring.application.name=search


# Eureka Client的注册位置，即：Eureka Server的位置
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Eureka实例名称，即Eureka Client名称
eureka.instance.appname=${spring.application.name}
# Eureka Client是否使用IP地址来注册
# ## 即最终的注册表中表示这个Eureka Client时使用的是127.0.0.1这样的IP地址，还是localhost这样的主机名
# ## 取值为true表示使用IP地址，取值为false表示不使用IP地址，即使用主机名
eureka.instance.prefer-ip-address=true
# Eureka Client注册的IP地址，需要eureka.instance.prefer-ip-address设置为true
eureka.instance.ip-address=127.0.0.1
# Eureka Client注册的主机名，需要eureka.instance.prefer-ip-address设置为false
eureka.instance.hostname=localhost
# Eureka Client在Eureka Server的状态页显示的信息
eureka.instance.instance-id=${eureka.instance.appname}@${eureka.instance.ip-address}:${server.port}

# 连接MySQL数据库的配置信息
spring.datasource.url=jdbc:mysql://localhost:3306/straw?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=root
# 使用Druid数据库连接池的配置信息
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=50

# 响应的JSON结果中将不包含为null的属性
spring.jackson.default-property-inclusion=non_null

# 设置显示的日志级别
logging.level.cn.tedu.straw=trace

# 自定义配置：从MySQL中查询“问题”列表时每页查询多少条数据
project.question.query-from-database.page-size=3

# 自定义配置：从Elasticsearch中查询时每页查询多少条数据
project.question.query-from-es.page-size=3